version: '3.8'

services:
  # Relayer Middleware
  relayer:
    build:
      context: ./relayer-middleware
      dockerfile: Dockerfile
    environment:
      - ACTIVE_RELAYER=hermes
      - RPC_USERNAME=${RPC_USERNAME}
      - RPC_PASSWORD=${RPC_PASSWORD}
    volumes:
      - ./config/hermes:/config/hermes:ro
      - ./config/keys:/config/keys:ro
      - hermes-data:/root/.hermes
      - ./logs/relayer:/var/log/relayers
    ports:
      - "3000:3000"  # Hermes REST API
      - "3001:3001"  # Hermes telemetry
    restart: unless-stopped
    networks:
      - relayooor-net

  # Chainpulse Monitoring
  chainpulse:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    environment:
      - RPC_USERNAME=${RPC_USERNAME}
      - RPC_PASSWORD=${RPC_PASSWORD}
    volumes:
      - ./monitoring/config/chainpulse-cosmos-osmosis.toml:/config/chainpulse.toml:ro
      - chainpulse-data:/data
    ports:
      - "3000:3000"  # Metrics endpoint
    restart: unless-stopped
    networks:
      - relayooor-net

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - relayooor-net
    depends_on:
      - chainpulse
      - relayer

  # Grafana
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./monitoring/config/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3003:3000"  # Grafana (mapped to avoid conflict)
    restart: unless-stopped
    networks:
      - relayooor-net
    depends_on:
      - prometheus

  # API Backend
  api-backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - CHAINPULSE_URL=http://chainpulse:3000
      - HERMES_API_URL=http://relayer:3000
      - PROMETHEUS_URL=http://prometheus:9090
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - relayooor-net
    depends_on:
      - chainpulse
      - relayer
      - prometheus

  # Web App
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - relayooor-net
    depends_on:
      - api-backend

volumes:
  hermes-data:
  chainpulse-data:
  prometheus-data:
  grafana-data:

networks:
  relayooor-net:
    driver: bridge