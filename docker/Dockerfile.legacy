# Multi-stage build for legacy IBC relayer versions

# Build Hermes v0.15.0 (for networks requiring older IBC versions)
FROM rust:1.65-bookworm AS hermes-legacy-builder

ARG HERMES_VERSION=v0.15.0
ARG PROTOC_VERSION=21.12

WORKDIR /build

# Install protoc and dependencies
RUN ARCH=$(uname -m) && \
	if [ "$ARCH" = "x86_64" ]; then \
		ARCH=x86_64; \
	elif [ "$ARCH" = "aarch64" ]; then \
		ARCH=aarch_64;\
	else \
		echo "Unsupported architecture: $ARCH"; exit 1; \
	fi && \
	wget https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-$ARCH.zip -O /tmp/protoc.zip && \
	unzip /tmp/protoc.zip -d /usr/local && \
	rm -rf /tmp/protoc.zip

RUN apt update && apt install -y clang libssl-dev pkg-config git

# Clone specific version
RUN git clone https://github.com/informalsystems/hermes.git && \
	cd hermes && \
	git checkout $HERMES_VERSION

WORKDIR /build/hermes
RUN cargo build --release

# Build Go relayer v2.1.2 (legacy version)
FROM golang:1.19-alpine AS go-relayer-legacy-builder

ARG RLY_VERSION=v2.1.2

RUN apk add --update --no-cache curl make git libc-dev bash gcc linux-headers eudev-dev

WORKDIR /build

# Clone specific version
RUN git clone https://github.com/cosmos/relayer.git && \
	cd relayer && \
	git checkout $RLY_VERSION

WORKDIR /build/relayer
RUN CGO_ENABLED=1 LDFLAGS='-linkmode external -extldflags "-static"' make install

# Final runtime image with version selection
FROM ubuntu:22.04

RUN apt-get update && apt-get install -y --no-install-recommends \
	ca-certificates \
	curl \
	jq \
	supervisor \
	nginx \
	&& rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -g 1000 relayer && useradd -m -u 1000 -g relayer relayer

# Copy current version binaries
COPY --from=hermes-builder /build/target/release/hermes /usr/local/bin/hermes
COPY --from=go-relayer-builder /go/bin/rly /usr/local/bin/rly

# Copy legacy version binaries
COPY --from=hermes-legacy-builder /build/hermes/target/release/hermes /usr/local/bin/hermes-legacy
COPY --from=go-relayer-legacy-builder /go/bin/rly /usr/local/bin/rly-legacy

# Copy version selector script
COPY docker/relayer-selector.sh /usr/local/bin/relayer-selector
RUN chmod +x /usr/local/bin/relayer-selector

# Copy other components (same as main Dockerfile)
COPY --from=backend-builder /app/relayer-dashboard /usr/local/bin/relayer-dashboard
COPY --from=frontend-builder /app/dist /var/www/html
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/supervisord-legacy.conf /etc/supervisor/conf.d/supervisord.conf

# Create directories
RUN mkdir -p /home/relayer/.hermes /home/relayer/.relayer /var/log/supervisor
RUN chown -R relayer:relayer /home/relayer /var/log/supervisor

# Environment variable to select version
ENV RELAYER_VERSION=current

# Expose ports
EXPOSE 80 3000 5184 5185

WORKDIR /home/relayer

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]