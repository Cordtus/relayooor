# Simple Dockerfile for testing the dashboard without relayers

# Build web dashboard backend
FROM golang:1.21-alpine AS backend-builder

RUN apk add --update --no-cache git

WORKDIR /app
COPY go.mod go.sum ./
COPY api/ ./api/

RUN go mod download
RUN go build -o relayer-dashboard ./api/cmd/server

# Build web dashboard frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app
COPY web/package.json ./
RUN npm install

COPY web/ ./
RUN npm run build

# Final runtime image
FROM ubuntu:22.04

RUN apt-get update && apt-get install -y --no-install-recommends \
	ca-certificates \
	curl \
	supervisor \
	nginx \
	&& rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -g 1000 relayer && useradd -m -u 1000 -g relayer relayer

# Copy binaries
COPY --from=backend-builder /app/relayer-dashboard /usr/local/bin/relayer-dashboard

# Copy frontend build
COPY --from=frontend-builder /app/dist /var/www/html

# Copy configurations
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Create simple supervisord config
RUN echo '[supervisord]\n\
nodaemon=true\n\
user=root\n\
\n\
[program:nginx]\n\
command=/usr/sbin/nginx -g "daemon off;"\n\
autostart=true\n\
autorestart=true\n\
\n\
[program:api-server]\n\
command=/usr/local/bin/relayer-dashboard\n\
user=relayer\n\
autostart=true\n\
autorestart=true\n\
environment=HOME="/home/relayer",USER="relayer"' > /etc/supervisor/conf.d/supervisord.conf

# Create directories
RUN mkdir -p /home/relayer /var/log/supervisor
RUN chown -R relayer:relayer /home/relayer

# Expose ports
EXPOSE 80 3000

WORKDIR /home/relayer

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]